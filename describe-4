<#
.SYNOPSIS
  从 InSpec 控制文件中单行式的 describe 资源语句中，
  提取 security_policy(.属性) 或 registry_key("路径") 到变量。

.DESCRIPTION
  - 针对一行可能是 "describe security_policy.PropertyName do" 或
    "describe registry_key("some path") do" 等几种形式，做正则匹配。
  - 解析后把结果存到 $resource, $property, $path 变量中。

.EXAMPLE
  PS C:\> .\ParseSecurityAndRegistryToVariables.ps1 -Line "describe security_policy.PasswordPolicy do"
  Resource: security_policy
  Property: PasswordPolicy
  Path    : 

  PS C:\> .\ParseSecurityAndRegistryToVariables.ps1 -Line 'describe registry_key("HKEY_LOCAL_MACHINE\Software\Microsoft") do'
  Resource: registry_key
  Property: 
  Path    : HKEY_LOCAL_MACHINE\Software\Microsoft

#>

param(
    [Parameter(Mandatory=$true, HelpMessage="请输入需要解析的单行 InSpec describe 语句")]
    [string]$Line
)

# 准备正则:
# ^\s*describe\s+
# (?:
#   (?<resSecurity>security_policy)(?:\.(?<securityProperty>\w+))?  # security_policy.[可选 property]
#   |
#   (?<resRegistry>registry_key\("(?<registryPath>[^"]+)"\))        # registry_key("...") 并捕获里面的路径
# )
# \s+do\s*$
#
$pattern = '^\s*describe\s+(?:(?<resSecurity>security_policy)(?:\.(?<securityProperty>\w+))?|(?<resRegistry>registry_key\("(?<registryPath>[^"]+)"\)))\s+do\s*$'

# 定义几个要输出的变量，初始设为 $null
$resource = $null
$property = $null
$path     = $null

# 做匹配
if ($Line -match $pattern) {
    
    # 如果是 security_policy
    if ($matches['resSecurity']) {
        $resource = "security_policy"
        $property = $matches['securityProperty']  # 可能为 $null 或比如 "PasswordPolicy"
    }
    # 如果是 registry_key
    elseif ($matches['resRegistry']) {
        $resource = "registry_key"
        $path     = $matches['registryPath']      # e.g. HKEY_LOCAL_MACHINE\Software\Microsoft
    }

    Write-Host "Resource: $resource"
    Write-Host "Property: $property"
    Write-Host "Path    : $path"
}
else {
    Write-Warning "输入行不符合 security_policy / registry_key 解析规则。无匹配结果。"
}
